/*!
 * ki.js v1.1.0 - 2015-10-06
 * Copyright (c) 2015 Denis Ciccale (@tdecs)
 * Released under MIT license
 * With ki.js you can do the basic stuff jQuery can, for example:
 * DOM Ready?
 * $(function () {
 * 	alert('Hey the DOM is ready ;)');
 * });
 * This was just ki.js, no jQuery
 * CSS Selectors
 * Use any CSS selector that exists to get elements from the DOM.
 * $('p:nth-last-of-type(2)');
 * $('[attribute|=value]');
 * $('p:not(.note)');
 * $('p:empty');
 * Yes, events with the known .on() and .off() methods
 * $(function () {
 * 	var alertMyName = function () {
 * 		alert('My name is ' + this.textContent);
 * 	};
 * 	$('button').on('click', alertMyName);
 * });
 * You can add any JavaScript event even touch events for mobile, under the hood ki.js uses addEventListener, so feel free to use any valid DOM event.
 * .each()
 * The each() method is also included in the core of ki.js for easy iteration on a DOM collection.
 * $(function () {
 * 	$('p').each(function (elem, i) {
 *
 * 		elem.style.color = 'red';
 *
 * 		elem.textContent += i;
 * 	});
 * });
 * All ki.js methods are chainable, just like jQuery.
 */
!function(a,b,c,d){function e(c){b.push.apply(this,c&&c.nodeType?[c]:""+c===c?a.querySelectorAll(c):d)}$=function(b){return/^f/.test(typeof b)?/c/.test(a.readyState)?b():$(a).on("DOMContentLoaded",b):new e(b)},$[c]=e[c]=$.fn=e.fn={length:0,on:function(a,b){return this.each(function(c){c.addEventListener(a,b)})},off:function(a,b){return this.each(function(c){c.removeEventListener(a,b)})},each:function(a,c){return b.forEach.call(this,a,c),this},splice:b.splice}}(document,[],"prototype");
